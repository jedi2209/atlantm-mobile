fastlane_version '2.108.0'

fastlane_require 'dotenv'

before_all do
  Dotenv.overload '.env'
  # ensure_git_branch(
  #   branch: 'master'
  # )
  # git_pull
  get_version_number(
    xcodeproj: ENV['XCODE_PROJ'],
    target: ENV['XCODE_TARGET']
  )
  get_build_number(
    xcodeproj: ENV['XCODE_PROJ']
  )
end

platform :ios do
  desc "Prepare the iOS app for dev or build"
  lane :prepare do
    puts "SPACESHIP_2FA_SMS_DEFAULT_PHONE_NUMBER: #{ENV['SPACESHIP_2FA_SMS_DEFAULT_PHONE_NUMBER']}"
    ensure_git_status_clean
    produce(
        app_identifier: "com.atlantm.app.OneSignalNotificationServiceExtension",
        app_name: "atlantm OneSignalNotificationServiceExtension",
        skip_itc: true
    )
  end

  desc "Push a new beta build to TestFlight"
  lane :beta do
    get_certificates           # invokes cert
    get_provisioning_profile   # invokes sigh
    increment_build_number(
        xcodeproj: "./ios/atlantm.xcodeproj"
    )
    build_app(
      workspace: "./ios/atlantm.xcworkspace",
      scheme: "atlantm",
      export_method: "app-store",
      export_options: {
        provisioningProfiles: {
          "com.atlantm.app" => "com.atlantm.app AppStore",
          "com.atlantm.app.OneSignalNotificationServiceExtension" => "XC.com.atlantm.app.OneSignalNotificationService"
        }
      }
    )
    update_code_signing_settings(
      path: "./ios/atlantm.xcodeproj",
      use_automatic_signing: true
    )
    # Generate the changelog based on commit messages since your last tag
    changelog_from_git_commits(
        pretty: "- %s",# Optional, lets you provide a custom format to apply to each commit when generating the changelog text
        date_format: "short",# Optional, lets you provide an additional date format to dates within the pretty-formatted string
        match_lightweight_tag: false,  # Optional, lets you ignore lightweight (non-annotated) tags when searching for the last tag
        merge_commit_filtering: "exclude_merges", # Optional, lets you filter out merge commits
        tag_match_pattern: "builds/iosbeta"
    )
    upload_to_testflight(
        skip_waiting_for_build_processing: true,
        skip_submission: true
    )
    notification(
      subtitle: "Upload is finish!",
      message: "iOS beta AppStore version #{lane_context[SharedValues::VERSION_NUMBER]} (#{lane_context[SharedValues::BUILD_NUMBER]})",
      app_icon: "https://www.zavarka-team.ru/logo.png",
      content_image: "./ios/atlantm/Images.xcassets/AppIcon.appiconset/AppStore Icon.png"
    )
    commit_version_bump(
        message: "Version Bump iOS",    # create a commit with a custom message
        xcodeproj: "ios/atlantm.xcodeproj"
    )
    add_git_tag(
        grouping: "builds",
        prefix: "v"
    )
    push_to_git_remote
  end
end

platform :android do
  desc "Runs all the tests"
  lane :test do
    # changelog_from_git_commits(
    #     pretty: "- (%ae) %s",# Optional, lets you provide a custom format to apply to each commit when generating the changelog text
    #     date_format: "short",# Optional, lets you provide an additional date format to dates within the pretty-formatted string
    #     match_lightweight_tag: false,  # Optional, lets you ignore lightweight (non-annotated) tags when searching for the last tag
    #     merge_commit_filtering: "exclude_merges", # Optional, lets you filter out merge commits
    #     tag_match_pattern: "builds/android"
    # )
    # gradle(
    #     project_dir: "./android/",
    #     task: "clean assemble",
    #     build_type: "Release",
    #     flags: "-PbuildType=debug",
    #     print_command_output: true
    # )
  end

  desc "Submit a new Internal Build to Google Play"
  lane :internal do
    changelog_from_git_commits(
        pretty: "- %s",# Optional, lets you provide a custom format to apply to each commit when generating the changelog text
        date_format: "short",# Optional, lets you provide an additional date format to dates within the pretty-formatted string
        match_lightweight_tag: false,  # Optional, lets you ignore lightweight (non-annotated) tags when searching for the last tag
        merge_commit_filtering: "exclude_merges", # Optional, lets you filter out merge commits
        tag_match_pattern: "builds/androidinternal"
    )
    gradle(
        project_dir: "./android/",
        task: "clean assemble",
        build_type: "Release",
        flags: "-PbuildType=release",
        print_command_output: true
    )
    properties = property_file_read(file: ENV['ANDROID_PROPERTY'])
    puts "AABs: #{Actions.lane_context[SharedValues::GRADLE_ALL_AAB_OUTPUT_PATHS]}"
    puts "AAB: #{Actions.lane_context[SharedValues::GRADLE_AAB_OUTPUT_PATH]}"
    upload_to_play_store(
        track: 'internal'
    )
    notification(
      subtitle: "Upload is finish!",
      message: "Google Play beta version #{lane_context[SharedValues::VERSION_NUMBER]} (#{lane_context[SharedValues::BUILD_NUMBER]}) is ready!",
      app_icon: "https://www.zavarka-team.ru/logo.png",
      content_image: "./ios/atlantm/Images.xcassets/AppIcon.appiconset/AppStore Icon.png"
    )
    git_commit(
      path: ['./android/app/versioning/app_version.properties'],
      message: 'Version Bump Android'
    )
    add_git_tag(
      build_number: "#{lane_context[SharedValues::VERSION_NUMBER]}." + properties["versionCode"],
      grouping: "builds",
      prefix: "v"
    )
    push_to_git_remote
  end

  error do |lane, exception|
    notification(
      subtitle: "Houston, we have a problem...",
      message: "Google Play beta version #{lane_context[SharedValues::VERSION_NUMBER]} (#{lane_context[SharedValues::BUILD_NUMBER]}) was NOT successfully upload. =(",
      app_icon: "https://www.zavarka-team.ru/logo.png",
      content_image: "./ios/atlantm/Images.xcassets/AppIcon.appiconset/AppStore Icon.png"
    )
  end

  desc "Make a new release build"
  lane :release do
    gradle(
        project_dir: "./android/",
        task: "clean assemble",
        build_type: "Release",
        flags: "-PbuildType=release",
        print_command_output: true
    )
    puts "AABs: #{Actions.lane_context[SharedValues::GRADLE_ALL_AAB_OUTPUT_PATHS]}"
    puts "AAB: #{Actions.lane_context[SharedValues::GRADLE_AAB_OUTPUT_PATH]}"
  end
end